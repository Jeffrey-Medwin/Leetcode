class Solution {
    public String longetPrefix(String[] strs) {
        Arrays.sort(strs);
        String firstEle = strs[0];
        String secondELe = strs[strs.length - 1];
        int index = 0;

        while(index < firstEle.length() && index < secondELe.length()) {
            if(firstEle.charAt(i) == secondELe.charAt(i)) {
                index++;
            } else {
                break;
            }
        }
        return strs.substring(0, index)
    }
}

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl

why we should only compare the first and last element after sorting the array?would you mind explain it ðŸ˜­....

If we have array like: [Flower, flow, flight, good]
This array is sorted, now you can easily tell that there is no common prefix among all the elements by just comparing first and last coz 1st and last will have the most difference between them, say you have:
[flower, flow, apple, flight, good] sorting this would give [apple, flower, flow, flight, good]

You can clearly see that max difference between the characters is between 1st and last string.