start = 1
end  = 8
mid = -1

while : 1 <= 8
(mid) 1 + (8 - 1) / 2 = 4
if : 16 > 8 
(end) 4 - 1 = 3

while: 1 <= 3
(mid) 1 + (3 - 1) / 2 = 2
else: 
(start) 2 + 1 = 3

while: 3 <= 3 
(mid) 3 + (3 - 3) / 2 = 3
if: 9 > 8
(end) 3 - 1 = 2

while: 3 <= 2
return (end) 2


mid = start + (end - start) / 2
case 1: mid * mid > x (get the first half)
    end = mid - 1
case 2: mid * mid == x 
    return mid
case 3: (get the first half)
    start = mid + 1